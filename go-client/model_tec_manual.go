/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go-macds

import (
	"encoding/json"
)

// checks if the TecManual type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TecManual{}

// TecManual struct for TecManual
type TecManual struct {
	// Manual Id
	ManualId *int32 `json:"manualId,omitempty"`
	// Manual Main Title
	ManualMainTitle *string `json:"manualMainTitle,omitempty"`
	// Manual Sub Title
	ManualSubTitle *string `json:"manualSubTitle,omitempty"`
	// Qualifier Collection Id
	QualifierCollectionId *int32 `json:"qualifierCollectionId,omitempty"`
	// Qualifier Collection Text
	QualifierCollectionText *string `json:"qualifierCollectionText,omitempty"`
	// List of Content Sections
	ContentSections []ContentSection `json:"contentSections,omitempty"`
	// List of Images
	Images []ManualImage `json:"images,omitempty"`
}

// NewTecManual instantiates a new TecManual object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTecManual() *TecManual {
	this := TecManual{}
	return &this
}

// NewTecManualWithDefaults instantiates a new TecManual object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTecManualWithDefaults() *TecManual {
	this := TecManual{}
	return &this
}

// GetManualId returns the ManualId field value if set, zero value otherwise.
func (o *TecManual) GetManualId() int32 {
	if o == nil || IsNil(o.ManualId) {
		var ret int32
		return ret
	}
	return *o.ManualId
}

// GetManualIdOk returns a tuple with the ManualId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TecManual) GetManualIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ManualId) {
		return nil, false
	}
	return o.ManualId, true
}

// HasManualId returns a boolean if a field has been set.
func (o *TecManual) HasManualId() bool {
	if o != nil && !IsNil(o.ManualId) {
		return true
	}

	return false
}

// SetManualId gets a reference to the given int32 and assigns it to the ManualId field.
func (o *TecManual) SetManualId(v int32) {
	o.ManualId = &v
}

// GetManualMainTitle returns the ManualMainTitle field value if set, zero value otherwise.
func (o *TecManual) GetManualMainTitle() string {
	if o == nil || IsNil(o.ManualMainTitle) {
		var ret string
		return ret
	}
	return *o.ManualMainTitle
}

// GetManualMainTitleOk returns a tuple with the ManualMainTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TecManual) GetManualMainTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ManualMainTitle) {
		return nil, false
	}
	return o.ManualMainTitle, true
}

// HasManualMainTitle returns a boolean if a field has been set.
func (o *TecManual) HasManualMainTitle() bool {
	if o != nil && !IsNil(o.ManualMainTitle) {
		return true
	}

	return false
}

// SetManualMainTitle gets a reference to the given string and assigns it to the ManualMainTitle field.
func (o *TecManual) SetManualMainTitle(v string) {
	o.ManualMainTitle = &v
}

// GetManualSubTitle returns the ManualSubTitle field value if set, zero value otherwise.
func (o *TecManual) GetManualSubTitle() string {
	if o == nil || IsNil(o.ManualSubTitle) {
		var ret string
		return ret
	}
	return *o.ManualSubTitle
}

// GetManualSubTitleOk returns a tuple with the ManualSubTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TecManual) GetManualSubTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ManualSubTitle) {
		return nil, false
	}
	return o.ManualSubTitle, true
}

// HasManualSubTitle returns a boolean if a field has been set.
func (o *TecManual) HasManualSubTitle() bool {
	if o != nil && !IsNil(o.ManualSubTitle) {
		return true
	}

	return false
}

// SetManualSubTitle gets a reference to the given string and assigns it to the ManualSubTitle field.
func (o *TecManual) SetManualSubTitle(v string) {
	o.ManualSubTitle = &v
}

// GetQualifierCollectionId returns the QualifierCollectionId field value if set, zero value otherwise.
func (o *TecManual) GetQualifierCollectionId() int32 {
	if o == nil || IsNil(o.QualifierCollectionId) {
		var ret int32
		return ret
	}
	return *o.QualifierCollectionId
}

// GetQualifierCollectionIdOk returns a tuple with the QualifierCollectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TecManual) GetQualifierCollectionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.QualifierCollectionId) {
		return nil, false
	}
	return o.QualifierCollectionId, true
}

// HasQualifierCollectionId returns a boolean if a field has been set.
func (o *TecManual) HasQualifierCollectionId() bool {
	if o != nil && !IsNil(o.QualifierCollectionId) {
		return true
	}

	return false
}

// SetQualifierCollectionId gets a reference to the given int32 and assigns it to the QualifierCollectionId field.
func (o *TecManual) SetQualifierCollectionId(v int32) {
	o.QualifierCollectionId = &v
}

// GetQualifierCollectionText returns the QualifierCollectionText field value if set, zero value otherwise.
func (o *TecManual) GetQualifierCollectionText() string {
	if o == nil || IsNil(o.QualifierCollectionText) {
		var ret string
		return ret
	}
	return *o.QualifierCollectionText
}

// GetQualifierCollectionTextOk returns a tuple with the QualifierCollectionText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TecManual) GetQualifierCollectionTextOk() (*string, bool) {
	if o == nil || IsNil(o.QualifierCollectionText) {
		return nil, false
	}
	return o.QualifierCollectionText, true
}

// HasQualifierCollectionText returns a boolean if a field has been set.
func (o *TecManual) HasQualifierCollectionText() bool {
	if o != nil && !IsNil(o.QualifierCollectionText) {
		return true
	}

	return false
}

// SetQualifierCollectionText gets a reference to the given string and assigns it to the QualifierCollectionText field.
func (o *TecManual) SetQualifierCollectionText(v string) {
	o.QualifierCollectionText = &v
}

// GetContentSections returns the ContentSections field value if set, zero value otherwise.
func (o *TecManual) GetContentSections() []ContentSection {
	if o == nil || IsNil(o.ContentSections) {
		var ret []ContentSection
		return ret
	}
	return o.ContentSections
}

// GetContentSectionsOk returns a tuple with the ContentSections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TecManual) GetContentSectionsOk() ([]ContentSection, bool) {
	if o == nil || IsNil(o.ContentSections) {
		return nil, false
	}
	return o.ContentSections, true
}

// HasContentSections returns a boolean if a field has been set.
func (o *TecManual) HasContentSections() bool {
	if o != nil && !IsNil(o.ContentSections) {
		return true
	}

	return false
}

// SetContentSections gets a reference to the given []ContentSection and assigns it to the ContentSections field.
func (o *TecManual) SetContentSections(v []ContentSection) {
	o.ContentSections = v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *TecManual) GetImages() []ManualImage {
	if o == nil || IsNil(o.Images) {
		var ret []ManualImage
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TecManual) GetImagesOk() ([]ManualImage, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *TecManual) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []ManualImage and assigns it to the Images field.
func (o *TecManual) SetImages(v []ManualImage) {
	o.Images = v
}

func (o TecManual) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TecManual) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ManualId) {
		toSerialize["manualId"] = o.ManualId
	}
	if !IsNil(o.ManualMainTitle) {
		toSerialize["manualMainTitle"] = o.ManualMainTitle
	}
	if !IsNil(o.ManualSubTitle) {
		toSerialize["manualSubTitle"] = o.ManualSubTitle
	}
	if !IsNil(o.QualifierCollectionId) {
		toSerialize["qualifierCollectionId"] = o.QualifierCollectionId
	}
	if !IsNil(o.QualifierCollectionText) {
		toSerialize["qualifierCollectionText"] = o.QualifierCollectionText
	}
	if !IsNil(o.ContentSections) {
		toSerialize["contentSections"] = o.ContentSections
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	return toSerialize, nil
}

type NullableTecManual struct {
	value *TecManual
	isSet bool
}

func (v NullableTecManual) Get() *TecManual {
	return v.value
}

func (v *NullableTecManual) Set(val *TecManual) {
	v.value = val
	v.isSet = true
}

func (v NullableTecManual) IsSet() bool {
	return v.isSet
}

func (v *NullableTecManual) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTecManual(val *TecManual) *NullableTecManual {
	return &NullableTecManual{value: val, isSet: true}
}

func (v NullableTecManual) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTecManual) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


