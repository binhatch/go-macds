/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gomacds

import (
	"encoding/json"
)

// checks if the ComponentDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComponentDTO{}

// ComponentDTO struct for ComponentDTO
type ComponentDTO struct {
	// Short Name
	ShortName *string `json:"shortName,omitempty"`
	// Component Id
	ComponentId *int32 `json:"componentId,omitempty"`
	Name *Texts `json:"name,omitempty"`
	// Image Placement URL
	ImagePlacementUrl *string `json:"imagePlacementUrl,omitempty"`
	// Image URL
	ImageUrl *string `json:"imageUrl,omitempty"`
	HintName *Texts `json:"hintName,omitempty"`
	// Generic Article Numbers
	GenericArticleNos []int32 `json:"genericArticleNos,omitempty"`
	// X Absolute
	Xabs *string `json:"xabs,omitempty"`
	// Y Absolute
	Yabs *string `json:"yabs,omitempty"`
}

// NewComponentDTO instantiates a new ComponentDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponentDTO() *ComponentDTO {
	this := ComponentDTO{}
	return &this
}

// NewComponentDTOWithDefaults instantiates a new ComponentDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentDTOWithDefaults() *ComponentDTO {
	this := ComponentDTO{}
	return &this
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *ComponentDTO) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentDTO) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *ComponentDTO) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *ComponentDTO) SetShortName(v string) {
	o.ShortName = &v
}

// GetComponentId returns the ComponentId field value if set, zero value otherwise.
func (o *ComponentDTO) GetComponentId() int32 {
	if o == nil || IsNil(o.ComponentId) {
		var ret int32
		return ret
	}
	return *o.ComponentId
}

// GetComponentIdOk returns a tuple with the ComponentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentDTO) GetComponentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ComponentId) {
		return nil, false
	}
	return o.ComponentId, true
}

// HasComponentId returns a boolean if a field has been set.
func (o *ComponentDTO) HasComponentId() bool {
	if o != nil && !IsNil(o.ComponentId) {
		return true
	}

	return false
}

// SetComponentId gets a reference to the given int32 and assigns it to the ComponentId field.
func (o *ComponentDTO) SetComponentId(v int32) {
	o.ComponentId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ComponentDTO) GetName() Texts {
	if o == nil || IsNil(o.Name) {
		var ret Texts
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentDTO) GetNameOk() (*Texts, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ComponentDTO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given Texts and assigns it to the Name field.
func (o *ComponentDTO) SetName(v Texts) {
	o.Name = &v
}

// GetImagePlacementUrl returns the ImagePlacementUrl field value if set, zero value otherwise.
func (o *ComponentDTO) GetImagePlacementUrl() string {
	if o == nil || IsNil(o.ImagePlacementUrl) {
		var ret string
		return ret
	}
	return *o.ImagePlacementUrl
}

// GetImagePlacementUrlOk returns a tuple with the ImagePlacementUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentDTO) GetImagePlacementUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ImagePlacementUrl) {
		return nil, false
	}
	return o.ImagePlacementUrl, true
}

// HasImagePlacementUrl returns a boolean if a field has been set.
func (o *ComponentDTO) HasImagePlacementUrl() bool {
	if o != nil && !IsNil(o.ImagePlacementUrl) {
		return true
	}

	return false
}

// SetImagePlacementUrl gets a reference to the given string and assigns it to the ImagePlacementUrl field.
func (o *ComponentDTO) SetImagePlacementUrl(v string) {
	o.ImagePlacementUrl = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *ComponentDTO) GetImageUrl() string {
	if o == nil || IsNil(o.ImageUrl) {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentDTO) GetImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ImageUrl) {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *ComponentDTO) HasImageUrl() bool {
	if o != nil && !IsNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *ComponentDTO) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetHintName returns the HintName field value if set, zero value otherwise.
func (o *ComponentDTO) GetHintName() Texts {
	if o == nil || IsNil(o.HintName) {
		var ret Texts
		return ret
	}
	return *o.HintName
}

// GetHintNameOk returns a tuple with the HintName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentDTO) GetHintNameOk() (*Texts, bool) {
	if o == nil || IsNil(o.HintName) {
		return nil, false
	}
	return o.HintName, true
}

// HasHintName returns a boolean if a field has been set.
func (o *ComponentDTO) HasHintName() bool {
	if o != nil && !IsNil(o.HintName) {
		return true
	}

	return false
}

// SetHintName gets a reference to the given Texts and assigns it to the HintName field.
func (o *ComponentDTO) SetHintName(v Texts) {
	o.HintName = &v
}

// GetGenericArticleNos returns the GenericArticleNos field value if set, zero value otherwise.
func (o *ComponentDTO) GetGenericArticleNos() []int32 {
	if o == nil || IsNil(o.GenericArticleNos) {
		var ret []int32
		return ret
	}
	return o.GenericArticleNos
}

// GetGenericArticleNosOk returns a tuple with the GenericArticleNos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentDTO) GetGenericArticleNosOk() ([]int32, bool) {
	if o == nil || IsNil(o.GenericArticleNos) {
		return nil, false
	}
	return o.GenericArticleNos, true
}

// HasGenericArticleNos returns a boolean if a field has been set.
func (o *ComponentDTO) HasGenericArticleNos() bool {
	if o != nil && !IsNil(o.GenericArticleNos) {
		return true
	}

	return false
}

// SetGenericArticleNos gets a reference to the given []int32 and assigns it to the GenericArticleNos field.
func (o *ComponentDTO) SetGenericArticleNos(v []int32) {
	o.GenericArticleNos = v
}

// GetXabs returns the Xabs field value if set, zero value otherwise.
func (o *ComponentDTO) GetXabs() string {
	if o == nil || IsNil(o.Xabs) {
		var ret string
		return ret
	}
	return *o.Xabs
}

// GetXabsOk returns a tuple with the Xabs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentDTO) GetXabsOk() (*string, bool) {
	if o == nil || IsNil(o.Xabs) {
		return nil, false
	}
	return o.Xabs, true
}

// HasXabs returns a boolean if a field has been set.
func (o *ComponentDTO) HasXabs() bool {
	if o != nil && !IsNil(o.Xabs) {
		return true
	}

	return false
}

// SetXabs gets a reference to the given string and assigns it to the Xabs field.
func (o *ComponentDTO) SetXabs(v string) {
	o.Xabs = &v
}

// GetYabs returns the Yabs field value if set, zero value otherwise.
func (o *ComponentDTO) GetYabs() string {
	if o == nil || IsNil(o.Yabs) {
		var ret string
		return ret
	}
	return *o.Yabs
}

// GetYabsOk returns a tuple with the Yabs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentDTO) GetYabsOk() (*string, bool) {
	if o == nil || IsNil(o.Yabs) {
		return nil, false
	}
	return o.Yabs, true
}

// HasYabs returns a boolean if a field has been set.
func (o *ComponentDTO) HasYabs() bool {
	if o != nil && !IsNil(o.Yabs) {
		return true
	}

	return false
}

// SetYabs gets a reference to the given string and assigns it to the Yabs field.
func (o *ComponentDTO) SetYabs(v string) {
	o.Yabs = &v
}

func (o ComponentDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComponentDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !IsNil(o.ComponentId) {
		toSerialize["componentId"] = o.ComponentId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ImagePlacementUrl) {
		toSerialize["imagePlacementUrl"] = o.ImagePlacementUrl
	}
	if !IsNil(o.ImageUrl) {
		toSerialize["imageUrl"] = o.ImageUrl
	}
	if !IsNil(o.HintName) {
		toSerialize["hintName"] = o.HintName
	}
	if !IsNil(o.GenericArticleNos) {
		toSerialize["genericArticleNos"] = o.GenericArticleNos
	}
	if !IsNil(o.Xabs) {
		toSerialize["xabs"] = o.Xabs
	}
	if !IsNil(o.Yabs) {
		toSerialize["yabs"] = o.Yabs
	}
	return toSerialize, nil
}

type NullableComponentDTO struct {
	value *ComponentDTO
	isSet bool
}

func (v NullableComponentDTO) Get() *ComponentDTO {
	return v.value
}

func (v *NullableComponentDTO) Set(val *ComponentDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentDTO(val *ComponentDTO) *NullableComponentDTO {
	return &NullableComponentDTO{value: val, isSet: true}
}

func (v NullableComponentDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


