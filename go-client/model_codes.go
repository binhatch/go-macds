/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/binhatch/go-macds

import (
	"encoding/json"
)

// checks if the Codes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Codes{}

// Codes Lists the Hella Gutmann and proprietary representations of the DTC.
type Codes struct {
	// Shows the DTC representation of how Hella Gutmann diagnostic devices store the trouble code
	DtcHgs *string `json:"dtcHgs,omitempty"`
	// If existent, shows the DTC representation of how the manufacturer maintains the (proprietary) trouble codes
	DtcManuf *string `json:"dtcManuf,omitempty"`
	// Page Id (internal)
	PageId *string `json:"pageId,omitempty"`
	// Page Id Array (internal)
	PageIdArray []string `json:"pageIdArray,omitempty"`
	// Table Id (internal)
	TableId *string `json:"tableId,omitempty"`
	// Table Id Array (internal)
	TableIdArray []string `json:"tableIdArray,omitempty"`
}

// NewCodes instantiates a new Codes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodes() *Codes {
	this := Codes{}
	return &this
}

// NewCodesWithDefaults instantiates a new Codes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodesWithDefaults() *Codes {
	this := Codes{}
	return &this
}

// GetDtcHgs returns the DtcHgs field value if set, zero value otherwise.
func (o *Codes) GetDtcHgs() string {
	if o == nil || IsNil(o.DtcHgs) {
		var ret string
		return ret
	}
	return *o.DtcHgs
}

// GetDtcHgsOk returns a tuple with the DtcHgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Codes) GetDtcHgsOk() (*string, bool) {
	if o == nil || IsNil(o.DtcHgs) {
		return nil, false
	}
	return o.DtcHgs, true
}

// HasDtcHgs returns a boolean if a field has been set.
func (o *Codes) HasDtcHgs() bool {
	if o != nil && !IsNil(o.DtcHgs) {
		return true
	}

	return false
}

// SetDtcHgs gets a reference to the given string and assigns it to the DtcHgs field.
func (o *Codes) SetDtcHgs(v string) {
	o.DtcHgs = &v
}

// GetDtcManuf returns the DtcManuf field value if set, zero value otherwise.
func (o *Codes) GetDtcManuf() string {
	if o == nil || IsNil(o.DtcManuf) {
		var ret string
		return ret
	}
	return *o.DtcManuf
}

// GetDtcManufOk returns a tuple with the DtcManuf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Codes) GetDtcManufOk() (*string, bool) {
	if o == nil || IsNil(o.DtcManuf) {
		return nil, false
	}
	return o.DtcManuf, true
}

// HasDtcManuf returns a boolean if a field has been set.
func (o *Codes) HasDtcManuf() bool {
	if o != nil && !IsNil(o.DtcManuf) {
		return true
	}

	return false
}

// SetDtcManuf gets a reference to the given string and assigns it to the DtcManuf field.
func (o *Codes) SetDtcManuf(v string) {
	o.DtcManuf = &v
}

// GetPageId returns the PageId field value if set, zero value otherwise.
func (o *Codes) GetPageId() string {
	if o == nil || IsNil(o.PageId) {
		var ret string
		return ret
	}
	return *o.PageId
}

// GetPageIdOk returns a tuple with the PageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Codes) GetPageIdOk() (*string, bool) {
	if o == nil || IsNil(o.PageId) {
		return nil, false
	}
	return o.PageId, true
}

// HasPageId returns a boolean if a field has been set.
func (o *Codes) HasPageId() bool {
	if o != nil && !IsNil(o.PageId) {
		return true
	}

	return false
}

// SetPageId gets a reference to the given string and assigns it to the PageId field.
func (o *Codes) SetPageId(v string) {
	o.PageId = &v
}

// GetPageIdArray returns the PageIdArray field value if set, zero value otherwise.
func (o *Codes) GetPageIdArray() []string {
	if o == nil || IsNil(o.PageIdArray) {
		var ret []string
		return ret
	}
	return o.PageIdArray
}

// GetPageIdArrayOk returns a tuple with the PageIdArray field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Codes) GetPageIdArrayOk() ([]string, bool) {
	if o == nil || IsNil(o.PageIdArray) {
		return nil, false
	}
	return o.PageIdArray, true
}

// HasPageIdArray returns a boolean if a field has been set.
func (o *Codes) HasPageIdArray() bool {
	if o != nil && !IsNil(o.PageIdArray) {
		return true
	}

	return false
}

// SetPageIdArray gets a reference to the given []string and assigns it to the PageIdArray field.
func (o *Codes) SetPageIdArray(v []string) {
	o.PageIdArray = v
}

// GetTableId returns the TableId field value if set, zero value otherwise.
func (o *Codes) GetTableId() string {
	if o == nil || IsNil(o.TableId) {
		var ret string
		return ret
	}
	return *o.TableId
}

// GetTableIdOk returns a tuple with the TableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Codes) GetTableIdOk() (*string, bool) {
	if o == nil || IsNil(o.TableId) {
		return nil, false
	}
	return o.TableId, true
}

// HasTableId returns a boolean if a field has been set.
func (o *Codes) HasTableId() bool {
	if o != nil && !IsNil(o.TableId) {
		return true
	}

	return false
}

// SetTableId gets a reference to the given string and assigns it to the TableId field.
func (o *Codes) SetTableId(v string) {
	o.TableId = &v
}

// GetTableIdArray returns the TableIdArray field value if set, zero value otherwise.
func (o *Codes) GetTableIdArray() []string {
	if o == nil || IsNil(o.TableIdArray) {
		var ret []string
		return ret
	}
	return o.TableIdArray
}

// GetTableIdArrayOk returns a tuple with the TableIdArray field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Codes) GetTableIdArrayOk() ([]string, bool) {
	if o == nil || IsNil(o.TableIdArray) {
		return nil, false
	}
	return o.TableIdArray, true
}

// HasTableIdArray returns a boolean if a field has been set.
func (o *Codes) HasTableIdArray() bool {
	if o != nil && !IsNil(o.TableIdArray) {
		return true
	}

	return false
}

// SetTableIdArray gets a reference to the given []string and assigns it to the TableIdArray field.
func (o *Codes) SetTableIdArray(v []string) {
	o.TableIdArray = v
}

func (o Codes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Codes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DtcHgs) {
		toSerialize["dtcHgs"] = o.DtcHgs
	}
	if !IsNil(o.DtcManuf) {
		toSerialize["dtcManuf"] = o.DtcManuf
	}
	if !IsNil(o.PageId) {
		toSerialize["pageId"] = o.PageId
	}
	if !IsNil(o.PageIdArray) {
		toSerialize["pageIdArray"] = o.PageIdArray
	}
	if !IsNil(o.TableId) {
		toSerialize["tableId"] = o.TableId
	}
	if !IsNil(o.TableIdArray) {
		toSerialize["tableIdArray"] = o.TableIdArray
	}
	return toSerialize, nil
}

type NullableCodes struct {
	value *Codes
	isSet bool
}

func (v NullableCodes) Get() *Codes {
	return v.value
}

func (v *NullableCodes) Set(val *Codes) {
	v.value = val
	v.isSet = true
}

func (v NullableCodes) IsSet() bool {
	return v.isSet
}

func (v *NullableCodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodes(val *Codes) *NullableCodes {
	return &NullableCodes{value: val, isSet: true}
}

func (v NullableCodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


