/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go-macds

import (
	"encoding/json"
)

// checks if the TranslationContainer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranslationContainer{}

// TranslationContainer struct for TranslationContainer
type TranslationContainer struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	Text *Translation `json:"text,omitempty"`
}

// NewTranslationContainer instantiates a new TranslationContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslationContainer() *TranslationContainer {
	this := TranslationContainer{}
	return &this
}

// NewTranslationContainerWithDefaults instantiates a new TranslationContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslationContainerWithDefaults() *TranslationContainer {
	this := TranslationContainer{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TranslationContainer) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslationContainer) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TranslationContainer) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TranslationContainer) SetId(v int32) {
	o.Id = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *TranslationContainer) GetText() Translation {
	if o == nil || IsNil(o.Text) {
		var ret Translation
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslationContainer) GetTextOk() (*Translation, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *TranslationContainer) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given Translation and assigns it to the Text field.
func (o *TranslationContainer) SetText(v Translation) {
	o.Text = &v
}

func (o TranslationContainer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranslationContainer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	return toSerialize, nil
}

type NullableTranslationContainer struct {
	value *TranslationContainer
	isSet bool
}

func (v NullableTranslationContainer) Get() *TranslationContainer {
	return v.value
}

func (v *NullableTranslationContainer) Set(val *TranslationContainer) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslationContainer) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslationContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslationContainer(val *TranslationContainer) *NullableTranslationContainer {
	return &NullableTranslationContainer{value: val, isSet: true}
}

func (v NullableTranslationContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslationContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


