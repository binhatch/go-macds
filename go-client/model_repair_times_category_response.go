/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gomacds

import (
	"encoding/json"
)

// checks if the RepairTimesCategoryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepairTimesCategoryResponse{}

// RepairTimesCategoryResponse struct for RepairTimesCategoryResponse
type RepairTimesCategoryResponse struct {
	// Name
	Name *string `json:"name,omitempty"`
	// Code
	Code *string `json:"code,omitempty"`
	// Id
	Id *int32 `json:"id,omitempty"`
	// Order
	Order *int32 `json:"order,omitempty"`
	// A list of Repair Time Sub Categories (recursive)
	SubCategories []RepairTimesCategoryResponse `json:"subCategories,omitempty"`
}

// NewRepairTimesCategoryResponse instantiates a new RepairTimesCategoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepairTimesCategoryResponse() *RepairTimesCategoryResponse {
	this := RepairTimesCategoryResponse{}
	return &this
}

// NewRepairTimesCategoryResponseWithDefaults instantiates a new RepairTimesCategoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepairTimesCategoryResponseWithDefaults() *RepairTimesCategoryResponse {
	this := RepairTimesCategoryResponse{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RepairTimesCategoryResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesCategoryResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RepairTimesCategoryResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RepairTimesCategoryResponse) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *RepairTimesCategoryResponse) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesCategoryResponse) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *RepairTimesCategoryResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *RepairTimesCategoryResponse) SetCode(v string) {
	o.Code = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RepairTimesCategoryResponse) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesCategoryResponse) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RepairTimesCategoryResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RepairTimesCategoryResponse) SetId(v int32) {
	o.Id = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *RepairTimesCategoryResponse) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesCategoryResponse) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *RepairTimesCategoryResponse) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *RepairTimesCategoryResponse) SetOrder(v int32) {
	o.Order = &v
}

// GetSubCategories returns the SubCategories field value if set, zero value otherwise.
func (o *RepairTimesCategoryResponse) GetSubCategories() []RepairTimesCategoryResponse {
	if o == nil || IsNil(o.SubCategories) {
		var ret []RepairTimesCategoryResponse
		return ret
	}
	return o.SubCategories
}

// GetSubCategoriesOk returns a tuple with the SubCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesCategoryResponse) GetSubCategoriesOk() ([]RepairTimesCategoryResponse, bool) {
	if o == nil || IsNil(o.SubCategories) {
		return nil, false
	}
	return o.SubCategories, true
}

// HasSubCategories returns a boolean if a field has been set.
func (o *RepairTimesCategoryResponse) HasSubCategories() bool {
	if o != nil && !IsNil(o.SubCategories) {
		return true
	}

	return false
}

// SetSubCategories gets a reference to the given []RepairTimesCategoryResponse and assigns it to the SubCategories field.
func (o *RepairTimesCategoryResponse) SetSubCategories(v []RepairTimesCategoryResponse) {
	o.SubCategories = v
}

func (o RepairTimesCategoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepairTimesCategoryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.SubCategories) {
		toSerialize["subCategories"] = o.SubCategories
	}
	return toSerialize, nil
}

type NullableRepairTimesCategoryResponse struct {
	value *RepairTimesCategoryResponse
	isSet bool
}

func (v NullableRepairTimesCategoryResponse) Get() *RepairTimesCategoryResponse {
	return v.value
}

func (v *NullableRepairTimesCategoryResponse) Set(val *RepairTimesCategoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRepairTimesCategoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRepairTimesCategoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepairTimesCategoryResponse(val *RepairTimesCategoryResponse) *NullableRepairTimesCategoryResponse {
	return &NullableRepairTimesCategoryResponse{value: val, isSet: true}
}

func (v NullableRepairTimesCategoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepairTimesCategoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


