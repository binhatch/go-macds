/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go-macds

import (
	"encoding/json"
)

// checks if the Component type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Component{}

// Component struct for Component
type Component struct {
	// ID of the component
	Id *int32 `json:"id,omitempty"`
	// Name of the component
	Name *string `json:"name,omitempty"`
	// Two characters defining the language code; allowed values: de, en, nl, zh, it, hu, hr, fr, fi, es, el, tr, da, sv, sk, cs, ru, ro, pt, pl
	Language *string `json:"language,omitempty"`
	// Probability that this component is affected, based on historic repair evidence
	Prob *int32 `json:"prob,omitempty"`
	RelatedRmi *RelatedRmi `json:"relatedRmi,omitempty"`
	// The list of generic article numbers
	GenericArticleNumbers []int32 `json:"genericArticleNumbers,omitempty"`
}

// NewComponent instantiates a new Component object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponent() *Component {
	this := Component{}
	return &this
}

// NewComponentWithDefaults instantiates a new Component object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentWithDefaults() *Component {
	this := Component{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Component) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Component) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Component) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Component) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Component) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Component) SetName(v string) {
	o.Name = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *Component) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *Component) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *Component) SetLanguage(v string) {
	o.Language = &v
}

// GetProb returns the Prob field value if set, zero value otherwise.
func (o *Component) GetProb() int32 {
	if o == nil || IsNil(o.Prob) {
		var ret int32
		return ret
	}
	return *o.Prob
}

// GetProbOk returns a tuple with the Prob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetProbOk() (*int32, bool) {
	if o == nil || IsNil(o.Prob) {
		return nil, false
	}
	return o.Prob, true
}

// HasProb returns a boolean if a field has been set.
func (o *Component) HasProb() bool {
	if o != nil && !IsNil(o.Prob) {
		return true
	}

	return false
}

// SetProb gets a reference to the given int32 and assigns it to the Prob field.
func (o *Component) SetProb(v int32) {
	o.Prob = &v
}

// GetRelatedRmi returns the RelatedRmi field value if set, zero value otherwise.
func (o *Component) GetRelatedRmi() RelatedRmi {
	if o == nil || IsNil(o.RelatedRmi) {
		var ret RelatedRmi
		return ret
	}
	return *o.RelatedRmi
}

// GetRelatedRmiOk returns a tuple with the RelatedRmi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetRelatedRmiOk() (*RelatedRmi, bool) {
	if o == nil || IsNil(o.RelatedRmi) {
		return nil, false
	}
	return o.RelatedRmi, true
}

// HasRelatedRmi returns a boolean if a field has been set.
func (o *Component) HasRelatedRmi() bool {
	if o != nil && !IsNil(o.RelatedRmi) {
		return true
	}

	return false
}

// SetRelatedRmi gets a reference to the given RelatedRmi and assigns it to the RelatedRmi field.
func (o *Component) SetRelatedRmi(v RelatedRmi) {
	o.RelatedRmi = &v
}

// GetGenericArticleNumbers returns the GenericArticleNumbers field value if set, zero value otherwise.
func (o *Component) GetGenericArticleNumbers() []int32 {
	if o == nil || IsNil(o.GenericArticleNumbers) {
		var ret []int32
		return ret
	}
	return o.GenericArticleNumbers
}

// GetGenericArticleNumbersOk returns a tuple with the GenericArticleNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetGenericArticleNumbersOk() ([]int32, bool) {
	if o == nil || IsNil(o.GenericArticleNumbers) {
		return nil, false
	}
	return o.GenericArticleNumbers, true
}

// HasGenericArticleNumbers returns a boolean if a field has been set.
func (o *Component) HasGenericArticleNumbers() bool {
	if o != nil && !IsNil(o.GenericArticleNumbers) {
		return true
	}

	return false
}

// SetGenericArticleNumbers gets a reference to the given []int32 and assigns it to the GenericArticleNumbers field.
func (o *Component) SetGenericArticleNumbers(v []int32) {
	o.GenericArticleNumbers = v
}

func (o Component) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Component) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.Prob) {
		toSerialize["prob"] = o.Prob
	}
	if !IsNil(o.RelatedRmi) {
		toSerialize["relatedRmi"] = o.RelatedRmi
	}
	if !IsNil(o.GenericArticleNumbers) {
		toSerialize["genericArticleNumbers"] = o.GenericArticleNumbers
	}
	return toSerialize, nil
}

type NullableComponent struct {
	value *Component
	isSet bool
}

func (v NullableComponent) Get() *Component {
	return v.value
}

func (v *NullableComponent) Set(val *Component) {
	v.value = val
	v.isSet = true
}

func (v NullableComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponent(val *Component) *NullableComponent {
	return &NullableComponent{value: val, isSet: true}
}

func (v NullableComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


