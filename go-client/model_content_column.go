/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gomacds

import (
	"encoding/json"
)

// checks if the ContentColumn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContentColumn{}

// ContentColumn struct for ContentColumn
type ContentColumn struct {
	// Order
	Order *int32 `json:"order,omitempty"`
	// List of Content Blocks
	ContentBlocks []ContentBlock `json:"contentBlocks,omitempty"`
}

// NewContentColumn instantiates a new ContentColumn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentColumn() *ContentColumn {
	this := ContentColumn{}
	return &this
}

// NewContentColumnWithDefaults instantiates a new ContentColumn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentColumnWithDefaults() *ContentColumn {
	this := ContentColumn{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *ContentColumn) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentColumn) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *ContentColumn) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *ContentColumn) SetOrder(v int32) {
	o.Order = &v
}

// GetContentBlocks returns the ContentBlocks field value if set, zero value otherwise.
func (o *ContentColumn) GetContentBlocks() []ContentBlock {
	if o == nil || IsNil(o.ContentBlocks) {
		var ret []ContentBlock
		return ret
	}
	return o.ContentBlocks
}

// GetContentBlocksOk returns a tuple with the ContentBlocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentColumn) GetContentBlocksOk() ([]ContentBlock, bool) {
	if o == nil || IsNil(o.ContentBlocks) {
		return nil, false
	}
	return o.ContentBlocks, true
}

// HasContentBlocks returns a boolean if a field has been set.
func (o *ContentColumn) HasContentBlocks() bool {
	if o != nil && !IsNil(o.ContentBlocks) {
		return true
	}

	return false
}

// SetContentBlocks gets a reference to the given []ContentBlock and assigns it to the ContentBlocks field.
func (o *ContentColumn) SetContentBlocks(v []ContentBlock) {
	o.ContentBlocks = v
}

func (o ContentColumn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContentColumn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.ContentBlocks) {
		toSerialize["contentBlocks"] = o.ContentBlocks
	}
	return toSerialize, nil
}

type NullableContentColumn struct {
	value *ContentColumn
	isSet bool
}

func (v NullableContentColumn) Get() *ContentColumn {
	return v.value
}

func (v *NullableContentColumn) Set(val *ContentColumn) {
	v.value = val
	v.isSet = true
}

func (v NullableContentColumn) IsSet() bool {
	return v.isSet
}

func (v *NullableContentColumn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentColumn(val *ContentColumn) *NullableContentColumn {
	return &NullableContentColumn{value: val, isSet: true}
}

func (v NullableContentColumn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentColumn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


