/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/binhatch/go-macds

import (
	"encoding/json"
)

// checks if the RepairTimesJobLinkDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepairTimesJobLinkDetails{}

// RepairTimesJobLinkDetails main works to be done
type RepairTimesJobLinkDetails struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	// Hint
	Hint *string `json:"hint,omitempty"`
	// Order
	Order *int32 `json:"order,omitempty"`
	// Total Repair Time
	TotalRepairTime *int32 `json:"totalRepairTime,omitempty"`
	// Includes the tasks that are covered for this job link type.
	AssociatedWorks []RepairTimesAssociatedWork `json:"associatedWorks,omitempty"`
	LinkCriteria *RepairTimesLinkCriteria `json:"linkCriteria,omitempty"`
}

// NewRepairTimesJobLinkDetails instantiates a new RepairTimesJobLinkDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepairTimesJobLinkDetails() *RepairTimesJobLinkDetails {
	this := RepairTimesJobLinkDetails{}
	return &this
}

// NewRepairTimesJobLinkDetailsWithDefaults instantiates a new RepairTimesJobLinkDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepairTimesJobLinkDetailsWithDefaults() *RepairTimesJobLinkDetails {
	this := RepairTimesJobLinkDetails{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RepairTimesJobLinkDetails) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesJobLinkDetails) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RepairTimesJobLinkDetails) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RepairTimesJobLinkDetails) SetId(v int32) {
	o.Id = &v
}

// GetHint returns the Hint field value if set, zero value otherwise.
func (o *RepairTimesJobLinkDetails) GetHint() string {
	if o == nil || IsNil(o.Hint) {
		var ret string
		return ret
	}
	return *o.Hint
}

// GetHintOk returns a tuple with the Hint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesJobLinkDetails) GetHintOk() (*string, bool) {
	if o == nil || IsNil(o.Hint) {
		return nil, false
	}
	return o.Hint, true
}

// HasHint returns a boolean if a field has been set.
func (o *RepairTimesJobLinkDetails) HasHint() bool {
	if o != nil && !IsNil(o.Hint) {
		return true
	}

	return false
}

// SetHint gets a reference to the given string and assigns it to the Hint field.
func (o *RepairTimesJobLinkDetails) SetHint(v string) {
	o.Hint = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *RepairTimesJobLinkDetails) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesJobLinkDetails) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *RepairTimesJobLinkDetails) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *RepairTimesJobLinkDetails) SetOrder(v int32) {
	o.Order = &v
}

// GetTotalRepairTime returns the TotalRepairTime field value if set, zero value otherwise.
func (o *RepairTimesJobLinkDetails) GetTotalRepairTime() int32 {
	if o == nil || IsNil(o.TotalRepairTime) {
		var ret int32
		return ret
	}
	return *o.TotalRepairTime
}

// GetTotalRepairTimeOk returns a tuple with the TotalRepairTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesJobLinkDetails) GetTotalRepairTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalRepairTime) {
		return nil, false
	}
	return o.TotalRepairTime, true
}

// HasTotalRepairTime returns a boolean if a field has been set.
func (o *RepairTimesJobLinkDetails) HasTotalRepairTime() bool {
	if o != nil && !IsNil(o.TotalRepairTime) {
		return true
	}

	return false
}

// SetTotalRepairTime gets a reference to the given int32 and assigns it to the TotalRepairTime field.
func (o *RepairTimesJobLinkDetails) SetTotalRepairTime(v int32) {
	o.TotalRepairTime = &v
}

// GetAssociatedWorks returns the AssociatedWorks field value if set, zero value otherwise.
func (o *RepairTimesJobLinkDetails) GetAssociatedWorks() []RepairTimesAssociatedWork {
	if o == nil || IsNil(o.AssociatedWorks) {
		var ret []RepairTimesAssociatedWork
		return ret
	}
	return o.AssociatedWorks
}

// GetAssociatedWorksOk returns a tuple with the AssociatedWorks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesJobLinkDetails) GetAssociatedWorksOk() ([]RepairTimesAssociatedWork, bool) {
	if o == nil || IsNil(o.AssociatedWorks) {
		return nil, false
	}
	return o.AssociatedWorks, true
}

// HasAssociatedWorks returns a boolean if a field has been set.
func (o *RepairTimesJobLinkDetails) HasAssociatedWorks() bool {
	if o != nil && !IsNil(o.AssociatedWorks) {
		return true
	}

	return false
}

// SetAssociatedWorks gets a reference to the given []RepairTimesAssociatedWork and assigns it to the AssociatedWorks field.
func (o *RepairTimesJobLinkDetails) SetAssociatedWorks(v []RepairTimesAssociatedWork) {
	o.AssociatedWorks = v
}

// GetLinkCriteria returns the LinkCriteria field value if set, zero value otherwise.
func (o *RepairTimesJobLinkDetails) GetLinkCriteria() RepairTimesLinkCriteria {
	if o == nil || IsNil(o.LinkCriteria) {
		var ret RepairTimesLinkCriteria
		return ret
	}
	return *o.LinkCriteria
}

// GetLinkCriteriaOk returns a tuple with the LinkCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesJobLinkDetails) GetLinkCriteriaOk() (*RepairTimesLinkCriteria, bool) {
	if o == nil || IsNil(o.LinkCriteria) {
		return nil, false
	}
	return o.LinkCriteria, true
}

// HasLinkCriteria returns a boolean if a field has been set.
func (o *RepairTimesJobLinkDetails) HasLinkCriteria() bool {
	if o != nil && !IsNil(o.LinkCriteria) {
		return true
	}

	return false
}

// SetLinkCriteria gets a reference to the given RepairTimesLinkCriteria and assigns it to the LinkCriteria field.
func (o *RepairTimesJobLinkDetails) SetLinkCriteria(v RepairTimesLinkCriteria) {
	o.LinkCriteria = &v
}

func (o RepairTimesJobLinkDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepairTimesJobLinkDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Hint) {
		toSerialize["hint"] = o.Hint
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.TotalRepairTime) {
		toSerialize["totalRepairTime"] = o.TotalRepairTime
	}
	if !IsNil(o.AssociatedWorks) {
		toSerialize["associatedWorks"] = o.AssociatedWorks
	}
	if !IsNil(o.LinkCriteria) {
		toSerialize["linkCriteria"] = o.LinkCriteria
	}
	return toSerialize, nil
}

type NullableRepairTimesJobLinkDetails struct {
	value *RepairTimesJobLinkDetails
	isSet bool
}

func (v NullableRepairTimesJobLinkDetails) Get() *RepairTimesJobLinkDetails {
	return v.value
}

func (v *NullableRepairTimesJobLinkDetails) Set(val *RepairTimesJobLinkDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableRepairTimesJobLinkDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableRepairTimesJobLinkDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepairTimesJobLinkDetails(val *RepairTimesJobLinkDetails) *NullableRepairTimesJobLinkDetails {
	return &NullableRepairTimesJobLinkDetails{value: val, isSet: true}
}

func (v NullableRepairTimesJobLinkDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepairTimesJobLinkDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


