/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gomacds

import (
	"encoding/json"
)

// checks if the RepairTimesJobLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepairTimesJobLink{}

// RepairTimesJobLink struct for RepairTimesJobLink
type RepairTimesJobLink struct {
	JobLink *RepairTimesJobLinkDetails `json:"jobLink,omitempty"`
	// works which are required to be done before the main work
	PreliminaryLinks []RepairTimesJobLinkOther `json:"preliminaryLinks,omitempty"`
	// works which need to be done after the main work
	SubsequentLinks []RepairTimesJobLinkOther `json:"subsequentLinks,omitempty"`
	// Tasks that are not covered.
	NotIncludedLinks []RepairTimesJobLinkOther `json:"notIncludedLinks,omitempty"`
}

// NewRepairTimesJobLink instantiates a new RepairTimesJobLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepairTimesJobLink() *RepairTimesJobLink {
	this := RepairTimesJobLink{}
	return &this
}

// NewRepairTimesJobLinkWithDefaults instantiates a new RepairTimesJobLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepairTimesJobLinkWithDefaults() *RepairTimesJobLink {
	this := RepairTimesJobLink{}
	return &this
}

// GetJobLink returns the JobLink field value if set, zero value otherwise.
func (o *RepairTimesJobLink) GetJobLink() RepairTimesJobLinkDetails {
	if o == nil || IsNil(o.JobLink) {
		var ret RepairTimesJobLinkDetails
		return ret
	}
	return *o.JobLink
}

// GetJobLinkOk returns a tuple with the JobLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesJobLink) GetJobLinkOk() (*RepairTimesJobLinkDetails, bool) {
	if o == nil || IsNil(o.JobLink) {
		return nil, false
	}
	return o.JobLink, true
}

// HasJobLink returns a boolean if a field has been set.
func (o *RepairTimesJobLink) HasJobLink() bool {
	if o != nil && !IsNil(o.JobLink) {
		return true
	}

	return false
}

// SetJobLink gets a reference to the given RepairTimesJobLinkDetails and assigns it to the JobLink field.
func (o *RepairTimesJobLink) SetJobLink(v RepairTimesJobLinkDetails) {
	o.JobLink = &v
}

// GetPreliminaryLinks returns the PreliminaryLinks field value if set, zero value otherwise.
func (o *RepairTimesJobLink) GetPreliminaryLinks() []RepairTimesJobLinkOther {
	if o == nil || IsNil(o.PreliminaryLinks) {
		var ret []RepairTimesJobLinkOther
		return ret
	}
	return o.PreliminaryLinks
}

// GetPreliminaryLinksOk returns a tuple with the PreliminaryLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesJobLink) GetPreliminaryLinksOk() ([]RepairTimesJobLinkOther, bool) {
	if o == nil || IsNil(o.PreliminaryLinks) {
		return nil, false
	}
	return o.PreliminaryLinks, true
}

// HasPreliminaryLinks returns a boolean if a field has been set.
func (o *RepairTimesJobLink) HasPreliminaryLinks() bool {
	if o != nil && !IsNil(o.PreliminaryLinks) {
		return true
	}

	return false
}

// SetPreliminaryLinks gets a reference to the given []RepairTimesJobLinkOther and assigns it to the PreliminaryLinks field.
func (o *RepairTimesJobLink) SetPreliminaryLinks(v []RepairTimesJobLinkOther) {
	o.PreliminaryLinks = v
}

// GetSubsequentLinks returns the SubsequentLinks field value if set, zero value otherwise.
func (o *RepairTimesJobLink) GetSubsequentLinks() []RepairTimesJobLinkOther {
	if o == nil || IsNil(o.SubsequentLinks) {
		var ret []RepairTimesJobLinkOther
		return ret
	}
	return o.SubsequentLinks
}

// GetSubsequentLinksOk returns a tuple with the SubsequentLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesJobLink) GetSubsequentLinksOk() ([]RepairTimesJobLinkOther, bool) {
	if o == nil || IsNil(o.SubsequentLinks) {
		return nil, false
	}
	return o.SubsequentLinks, true
}

// HasSubsequentLinks returns a boolean if a field has been set.
func (o *RepairTimesJobLink) HasSubsequentLinks() bool {
	if o != nil && !IsNil(o.SubsequentLinks) {
		return true
	}

	return false
}

// SetSubsequentLinks gets a reference to the given []RepairTimesJobLinkOther and assigns it to the SubsequentLinks field.
func (o *RepairTimesJobLink) SetSubsequentLinks(v []RepairTimesJobLinkOther) {
	o.SubsequentLinks = v
}

// GetNotIncludedLinks returns the NotIncludedLinks field value if set, zero value otherwise.
func (o *RepairTimesJobLink) GetNotIncludedLinks() []RepairTimesJobLinkOther {
	if o == nil || IsNil(o.NotIncludedLinks) {
		var ret []RepairTimesJobLinkOther
		return ret
	}
	return o.NotIncludedLinks
}

// GetNotIncludedLinksOk returns a tuple with the NotIncludedLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesJobLink) GetNotIncludedLinksOk() ([]RepairTimesJobLinkOther, bool) {
	if o == nil || IsNil(o.NotIncludedLinks) {
		return nil, false
	}
	return o.NotIncludedLinks, true
}

// HasNotIncludedLinks returns a boolean if a field has been set.
func (o *RepairTimesJobLink) HasNotIncludedLinks() bool {
	if o != nil && !IsNil(o.NotIncludedLinks) {
		return true
	}

	return false
}

// SetNotIncludedLinks gets a reference to the given []RepairTimesJobLinkOther and assigns it to the NotIncludedLinks field.
func (o *RepairTimesJobLink) SetNotIncludedLinks(v []RepairTimesJobLinkOther) {
	o.NotIncludedLinks = v
}

func (o RepairTimesJobLink) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepairTimesJobLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobLink) {
		toSerialize["jobLink"] = o.JobLink
	}
	if !IsNil(o.PreliminaryLinks) {
		toSerialize["preliminaryLinks"] = o.PreliminaryLinks
	}
	if !IsNil(o.SubsequentLinks) {
		toSerialize["subsequentLinks"] = o.SubsequentLinks
	}
	if !IsNil(o.NotIncludedLinks) {
		toSerialize["notIncludedLinks"] = o.NotIncludedLinks
	}
	return toSerialize, nil
}

type NullableRepairTimesJobLink struct {
	value *RepairTimesJobLink
	isSet bool
}

func (v NullableRepairTimesJobLink) Get() *RepairTimesJobLink {
	return v.value
}

func (v *NullableRepairTimesJobLink) Set(val *RepairTimesJobLink) {
	v.value = val
	v.isSet = true
}

func (v NullableRepairTimesJobLink) IsSet() bool {
	return v.isSet
}

func (v *NullableRepairTimesJobLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepairTimesJobLink(val *RepairTimesJobLink) *NullableRepairTimesJobLink {
	return &NullableRepairTimesJobLink{value: val, isSet: true}
}

func (v NullableRepairTimesJobLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepairTimesJobLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


