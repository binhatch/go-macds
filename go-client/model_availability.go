/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/binhatch/go-macds

import (
	"encoding/json"
)

// checks if the Availability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Availability{}

// Availability struct for Availability
type Availability struct {
	// Indicates if dataType component location is available
	ComponentLocation *bool `json:"componentLocation,omitempty"`
	// Indicates if dataType fuse box location is available
	FuseBoxLocation *bool `json:"fuseBoxLocation,omitempty"`
	// Indicates if dataType repair times is available (will be true regardless of the particular modelId, if it's available for the specified kType)
	RepairTimes *bool `json:"repairTimes,omitempty"`
	// Indicates if dataType tech data is available
	TechData *bool `json:"techData,omitempty"`
	// Indicates if dataType service schedules is available
	ServiceSchedules *bool `json:"serviceSchedules,omitempty"`
	// Indicates if dataType wiring diagrams is available
	WiringDiagrams *bool `json:"wiringDiagrams,omitempty"`
	// Indicates if dataType recall campaigns is available
	RecallCampaigns *bool `json:"recallCampaigns,omitempty"`
	// Indicates if dataType repair instructions is available
	RepairInstructions *bool `json:"repairInstructions,omitempty"`
	// Indicates if dataType manufacturer campaigns is available
	ManufacturerCampaigns *bool `json:"manufacturerCampaigns,omitempty"`
}

// NewAvailability instantiates a new Availability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailability() *Availability {
	this := Availability{}
	return &this
}

// NewAvailabilityWithDefaults instantiates a new Availability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailabilityWithDefaults() *Availability {
	this := Availability{}
	return &this
}

// GetComponentLocation returns the ComponentLocation field value if set, zero value otherwise.
func (o *Availability) GetComponentLocation() bool {
	if o == nil || IsNil(o.ComponentLocation) {
		var ret bool
		return ret
	}
	return *o.ComponentLocation
}

// GetComponentLocationOk returns a tuple with the ComponentLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Availability) GetComponentLocationOk() (*bool, bool) {
	if o == nil || IsNil(o.ComponentLocation) {
		return nil, false
	}
	return o.ComponentLocation, true
}

// HasComponentLocation returns a boolean if a field has been set.
func (o *Availability) HasComponentLocation() bool {
	if o != nil && !IsNil(o.ComponentLocation) {
		return true
	}

	return false
}

// SetComponentLocation gets a reference to the given bool and assigns it to the ComponentLocation field.
func (o *Availability) SetComponentLocation(v bool) {
	o.ComponentLocation = &v
}

// GetFuseBoxLocation returns the FuseBoxLocation field value if set, zero value otherwise.
func (o *Availability) GetFuseBoxLocation() bool {
	if o == nil || IsNil(o.FuseBoxLocation) {
		var ret bool
		return ret
	}
	return *o.FuseBoxLocation
}

// GetFuseBoxLocationOk returns a tuple with the FuseBoxLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Availability) GetFuseBoxLocationOk() (*bool, bool) {
	if o == nil || IsNil(o.FuseBoxLocation) {
		return nil, false
	}
	return o.FuseBoxLocation, true
}

// HasFuseBoxLocation returns a boolean if a field has been set.
func (o *Availability) HasFuseBoxLocation() bool {
	if o != nil && !IsNil(o.FuseBoxLocation) {
		return true
	}

	return false
}

// SetFuseBoxLocation gets a reference to the given bool and assigns it to the FuseBoxLocation field.
func (o *Availability) SetFuseBoxLocation(v bool) {
	o.FuseBoxLocation = &v
}

// GetRepairTimes returns the RepairTimes field value if set, zero value otherwise.
func (o *Availability) GetRepairTimes() bool {
	if o == nil || IsNil(o.RepairTimes) {
		var ret bool
		return ret
	}
	return *o.RepairTimes
}

// GetRepairTimesOk returns a tuple with the RepairTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Availability) GetRepairTimesOk() (*bool, bool) {
	if o == nil || IsNil(o.RepairTimes) {
		return nil, false
	}
	return o.RepairTimes, true
}

// HasRepairTimes returns a boolean if a field has been set.
func (o *Availability) HasRepairTimes() bool {
	if o != nil && !IsNil(o.RepairTimes) {
		return true
	}

	return false
}

// SetRepairTimes gets a reference to the given bool and assigns it to the RepairTimes field.
func (o *Availability) SetRepairTimes(v bool) {
	o.RepairTimes = &v
}

// GetTechData returns the TechData field value if set, zero value otherwise.
func (o *Availability) GetTechData() bool {
	if o == nil || IsNil(o.TechData) {
		var ret bool
		return ret
	}
	return *o.TechData
}

// GetTechDataOk returns a tuple with the TechData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Availability) GetTechDataOk() (*bool, bool) {
	if o == nil || IsNil(o.TechData) {
		return nil, false
	}
	return o.TechData, true
}

// HasTechData returns a boolean if a field has been set.
func (o *Availability) HasTechData() bool {
	if o != nil && !IsNil(o.TechData) {
		return true
	}

	return false
}

// SetTechData gets a reference to the given bool and assigns it to the TechData field.
func (o *Availability) SetTechData(v bool) {
	o.TechData = &v
}

// GetServiceSchedules returns the ServiceSchedules field value if set, zero value otherwise.
func (o *Availability) GetServiceSchedules() bool {
	if o == nil || IsNil(o.ServiceSchedules) {
		var ret bool
		return ret
	}
	return *o.ServiceSchedules
}

// GetServiceSchedulesOk returns a tuple with the ServiceSchedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Availability) GetServiceSchedulesOk() (*bool, bool) {
	if o == nil || IsNil(o.ServiceSchedules) {
		return nil, false
	}
	return o.ServiceSchedules, true
}

// HasServiceSchedules returns a boolean if a field has been set.
func (o *Availability) HasServiceSchedules() bool {
	if o != nil && !IsNil(o.ServiceSchedules) {
		return true
	}

	return false
}

// SetServiceSchedules gets a reference to the given bool and assigns it to the ServiceSchedules field.
func (o *Availability) SetServiceSchedules(v bool) {
	o.ServiceSchedules = &v
}

// GetWiringDiagrams returns the WiringDiagrams field value if set, zero value otherwise.
func (o *Availability) GetWiringDiagrams() bool {
	if o == nil || IsNil(o.WiringDiagrams) {
		var ret bool
		return ret
	}
	return *o.WiringDiagrams
}

// GetWiringDiagramsOk returns a tuple with the WiringDiagrams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Availability) GetWiringDiagramsOk() (*bool, bool) {
	if o == nil || IsNil(o.WiringDiagrams) {
		return nil, false
	}
	return o.WiringDiagrams, true
}

// HasWiringDiagrams returns a boolean if a field has been set.
func (o *Availability) HasWiringDiagrams() bool {
	if o != nil && !IsNil(o.WiringDiagrams) {
		return true
	}

	return false
}

// SetWiringDiagrams gets a reference to the given bool and assigns it to the WiringDiagrams field.
func (o *Availability) SetWiringDiagrams(v bool) {
	o.WiringDiagrams = &v
}

// GetRecallCampaigns returns the RecallCampaigns field value if set, zero value otherwise.
func (o *Availability) GetRecallCampaigns() bool {
	if o == nil || IsNil(o.RecallCampaigns) {
		var ret bool
		return ret
	}
	return *o.RecallCampaigns
}

// GetRecallCampaignsOk returns a tuple with the RecallCampaigns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Availability) GetRecallCampaignsOk() (*bool, bool) {
	if o == nil || IsNil(o.RecallCampaigns) {
		return nil, false
	}
	return o.RecallCampaigns, true
}

// HasRecallCampaigns returns a boolean if a field has been set.
func (o *Availability) HasRecallCampaigns() bool {
	if o != nil && !IsNil(o.RecallCampaigns) {
		return true
	}

	return false
}

// SetRecallCampaigns gets a reference to the given bool and assigns it to the RecallCampaigns field.
func (o *Availability) SetRecallCampaigns(v bool) {
	o.RecallCampaigns = &v
}

// GetRepairInstructions returns the RepairInstructions field value if set, zero value otherwise.
func (o *Availability) GetRepairInstructions() bool {
	if o == nil || IsNil(o.RepairInstructions) {
		var ret bool
		return ret
	}
	return *o.RepairInstructions
}

// GetRepairInstructionsOk returns a tuple with the RepairInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Availability) GetRepairInstructionsOk() (*bool, bool) {
	if o == nil || IsNil(o.RepairInstructions) {
		return nil, false
	}
	return o.RepairInstructions, true
}

// HasRepairInstructions returns a boolean if a field has been set.
func (o *Availability) HasRepairInstructions() bool {
	if o != nil && !IsNil(o.RepairInstructions) {
		return true
	}

	return false
}

// SetRepairInstructions gets a reference to the given bool and assigns it to the RepairInstructions field.
func (o *Availability) SetRepairInstructions(v bool) {
	o.RepairInstructions = &v
}

// GetManufacturerCampaigns returns the ManufacturerCampaigns field value if set, zero value otherwise.
func (o *Availability) GetManufacturerCampaigns() bool {
	if o == nil || IsNil(o.ManufacturerCampaigns) {
		var ret bool
		return ret
	}
	return *o.ManufacturerCampaigns
}

// GetManufacturerCampaignsOk returns a tuple with the ManufacturerCampaigns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Availability) GetManufacturerCampaignsOk() (*bool, bool) {
	if o == nil || IsNil(o.ManufacturerCampaigns) {
		return nil, false
	}
	return o.ManufacturerCampaigns, true
}

// HasManufacturerCampaigns returns a boolean if a field has been set.
func (o *Availability) HasManufacturerCampaigns() bool {
	if o != nil && !IsNil(o.ManufacturerCampaigns) {
		return true
	}

	return false
}

// SetManufacturerCampaigns gets a reference to the given bool and assigns it to the ManufacturerCampaigns field.
func (o *Availability) SetManufacturerCampaigns(v bool) {
	o.ManufacturerCampaigns = &v
}

func (o Availability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Availability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComponentLocation) {
		toSerialize["componentLocation"] = o.ComponentLocation
	}
	if !IsNil(o.FuseBoxLocation) {
		toSerialize["fuseBoxLocation"] = o.FuseBoxLocation
	}
	if !IsNil(o.RepairTimes) {
		toSerialize["repairTimes"] = o.RepairTimes
	}
	if !IsNil(o.TechData) {
		toSerialize["techData"] = o.TechData
	}
	if !IsNil(o.ServiceSchedules) {
		toSerialize["serviceSchedules"] = o.ServiceSchedules
	}
	if !IsNil(o.WiringDiagrams) {
		toSerialize["wiringDiagrams"] = o.WiringDiagrams
	}
	if !IsNil(o.RecallCampaigns) {
		toSerialize["recallCampaigns"] = o.RecallCampaigns
	}
	if !IsNil(o.RepairInstructions) {
		toSerialize["repairInstructions"] = o.RepairInstructions
	}
	if !IsNil(o.ManufacturerCampaigns) {
		toSerialize["manufacturerCampaigns"] = o.ManufacturerCampaigns
	}
	return toSerialize, nil
}

type NullableAvailability struct {
	value *Availability
	isSet bool
}

func (v NullableAvailability) Get() *Availability {
	return v.value
}

func (v *NullableAvailability) Set(val *Availability) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailability) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailability(val *Availability) *NullableAvailability {
	return &NullableAvailability{value: val, isSet: true}
}

func (v NullableAvailability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


