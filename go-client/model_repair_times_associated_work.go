/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/binhatch/go-macds

import (
	"encoding/json"
)

// checks if the RepairTimesAssociatedWork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepairTimesAssociatedWork{}

// RepairTimesAssociatedWork struct for RepairTimesAssociatedWork
type RepairTimesAssociatedWork struct {
	// Order in which the work item ought to be displayed, and thus executed.
	Order *int32 `json:"order,omitempty"`
	// Indicates if this work item should be displayed in the UI, as it may already be appearing as repair time element text, but still have a repair time value.
	Display *bool `json:"display,omitempty"`
	// Repair time value as 1/100 of hours, e.g. 0,4 would be 0,4*60 minutes = 24 minutes
	RepairTime *int32 `json:"repairTime,omitempty"`
	// 1 = Labor Value may be calculated, 0 = no calculation allowed
	Calculation *int32 `json:"calculation,omitempty"`
	Job *RepairTimesJob `json:"job,omitempty"`
}

// NewRepairTimesAssociatedWork instantiates a new RepairTimesAssociatedWork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepairTimesAssociatedWork() *RepairTimesAssociatedWork {
	this := RepairTimesAssociatedWork{}
	return &this
}

// NewRepairTimesAssociatedWorkWithDefaults instantiates a new RepairTimesAssociatedWork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepairTimesAssociatedWorkWithDefaults() *RepairTimesAssociatedWork {
	this := RepairTimesAssociatedWork{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *RepairTimesAssociatedWork) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesAssociatedWork) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *RepairTimesAssociatedWork) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *RepairTimesAssociatedWork) SetOrder(v int32) {
	o.Order = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *RepairTimesAssociatedWork) GetDisplay() bool {
	if o == nil || IsNil(o.Display) {
		var ret bool
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesAssociatedWork) GetDisplayOk() (*bool, bool) {
	if o == nil || IsNil(o.Display) {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *RepairTimesAssociatedWork) HasDisplay() bool {
	if o != nil && !IsNil(o.Display) {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given bool and assigns it to the Display field.
func (o *RepairTimesAssociatedWork) SetDisplay(v bool) {
	o.Display = &v
}

// GetRepairTime returns the RepairTime field value if set, zero value otherwise.
func (o *RepairTimesAssociatedWork) GetRepairTime() int32 {
	if o == nil || IsNil(o.RepairTime) {
		var ret int32
		return ret
	}
	return *o.RepairTime
}

// GetRepairTimeOk returns a tuple with the RepairTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesAssociatedWork) GetRepairTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.RepairTime) {
		return nil, false
	}
	return o.RepairTime, true
}

// HasRepairTime returns a boolean if a field has been set.
func (o *RepairTimesAssociatedWork) HasRepairTime() bool {
	if o != nil && !IsNil(o.RepairTime) {
		return true
	}

	return false
}

// SetRepairTime gets a reference to the given int32 and assigns it to the RepairTime field.
func (o *RepairTimesAssociatedWork) SetRepairTime(v int32) {
	o.RepairTime = &v
}

// GetCalculation returns the Calculation field value if set, zero value otherwise.
func (o *RepairTimesAssociatedWork) GetCalculation() int32 {
	if o == nil || IsNil(o.Calculation) {
		var ret int32
		return ret
	}
	return *o.Calculation
}

// GetCalculationOk returns a tuple with the Calculation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesAssociatedWork) GetCalculationOk() (*int32, bool) {
	if o == nil || IsNil(o.Calculation) {
		return nil, false
	}
	return o.Calculation, true
}

// HasCalculation returns a boolean if a field has been set.
func (o *RepairTimesAssociatedWork) HasCalculation() bool {
	if o != nil && !IsNil(o.Calculation) {
		return true
	}

	return false
}

// SetCalculation gets a reference to the given int32 and assigns it to the Calculation field.
func (o *RepairTimesAssociatedWork) SetCalculation(v int32) {
	o.Calculation = &v
}

// GetJob returns the Job field value if set, zero value otherwise.
func (o *RepairTimesAssociatedWork) GetJob() RepairTimesJob {
	if o == nil || IsNil(o.Job) {
		var ret RepairTimesJob
		return ret
	}
	return *o.Job
}

// GetJobOk returns a tuple with the Job field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairTimesAssociatedWork) GetJobOk() (*RepairTimesJob, bool) {
	if o == nil || IsNil(o.Job) {
		return nil, false
	}
	return o.Job, true
}

// HasJob returns a boolean if a field has been set.
func (o *RepairTimesAssociatedWork) HasJob() bool {
	if o != nil && !IsNil(o.Job) {
		return true
	}

	return false
}

// SetJob gets a reference to the given RepairTimesJob and assigns it to the Job field.
func (o *RepairTimesAssociatedWork) SetJob(v RepairTimesJob) {
	o.Job = &v
}

func (o RepairTimesAssociatedWork) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepairTimesAssociatedWork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Display) {
		toSerialize["display"] = o.Display
	}
	if !IsNil(o.RepairTime) {
		toSerialize["repairTime"] = o.RepairTime
	}
	if !IsNil(o.Calculation) {
		toSerialize["calculation"] = o.Calculation
	}
	if !IsNil(o.Job) {
		toSerialize["job"] = o.Job
	}
	return toSerialize, nil
}

type NullableRepairTimesAssociatedWork struct {
	value *RepairTimesAssociatedWork
	isSet bool
}

func (v NullableRepairTimesAssociatedWork) Get() *RepairTimesAssociatedWork {
	return v.value
}

func (v *NullableRepairTimesAssociatedWork) Set(val *RepairTimesAssociatedWork) {
	v.value = val
	v.isSet = true
}

func (v NullableRepairTimesAssociatedWork) IsSet() bool {
	return v.isSet
}

func (v *NullableRepairTimesAssociatedWork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepairTimesAssociatedWork(val *RepairTimesAssociatedWork) *NullableRepairTimesAssociatedWork {
	return &NullableRepairTimesAssociatedWork{value: val, isSet: true}
}

func (v NullableRepairTimesAssociatedWork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepairTimesAssociatedWork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


