/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/binhatch/go-macds

import (
	"encoding/json"
)

// checks if the SystemGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemGroup{}

// SystemGroup struct for SystemGroup
type SystemGroup struct {
	// Indicates the order of appearance, e.g. in a GUI.
	Order *int32 `json:"order,omitempty"`
	Text *Translation `json:"text,omitempty"`
	// Contains the systems associated with the system group.
	SystemTypes []SystemType `json:"systemTypes,omitempty"`
	// Another list of System Groups (recursive)
	SystemGroups []SystemGroup `json:"systemGroups,omitempty"`
}

// NewSystemGroup instantiates a new SystemGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemGroup() *SystemGroup {
	this := SystemGroup{}
	return &this
}

// NewSystemGroupWithDefaults instantiates a new SystemGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemGroupWithDefaults() *SystemGroup {
	this := SystemGroup{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *SystemGroup) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGroup) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *SystemGroup) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *SystemGroup) SetOrder(v int32) {
	o.Order = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *SystemGroup) GetText() Translation {
	if o == nil || IsNil(o.Text) {
		var ret Translation
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGroup) GetTextOk() (*Translation, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *SystemGroup) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given Translation and assigns it to the Text field.
func (o *SystemGroup) SetText(v Translation) {
	o.Text = &v
}

// GetSystemTypes returns the SystemTypes field value if set, zero value otherwise.
func (o *SystemGroup) GetSystemTypes() []SystemType {
	if o == nil || IsNil(o.SystemTypes) {
		var ret []SystemType
		return ret
	}
	return o.SystemTypes
}

// GetSystemTypesOk returns a tuple with the SystemTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGroup) GetSystemTypesOk() ([]SystemType, bool) {
	if o == nil || IsNil(o.SystemTypes) {
		return nil, false
	}
	return o.SystemTypes, true
}

// HasSystemTypes returns a boolean if a field has been set.
func (o *SystemGroup) HasSystemTypes() bool {
	if o != nil && !IsNil(o.SystemTypes) {
		return true
	}

	return false
}

// SetSystemTypes gets a reference to the given []SystemType and assigns it to the SystemTypes field.
func (o *SystemGroup) SetSystemTypes(v []SystemType) {
	o.SystemTypes = v
}

// GetSystemGroups returns the SystemGroups field value if set, zero value otherwise.
func (o *SystemGroup) GetSystemGroups() []SystemGroup {
	if o == nil || IsNil(o.SystemGroups) {
		var ret []SystemGroup
		return ret
	}
	return o.SystemGroups
}

// GetSystemGroupsOk returns a tuple with the SystemGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemGroup) GetSystemGroupsOk() ([]SystemGroup, bool) {
	if o == nil || IsNil(o.SystemGroups) {
		return nil, false
	}
	return o.SystemGroups, true
}

// HasSystemGroups returns a boolean if a field has been set.
func (o *SystemGroup) HasSystemGroups() bool {
	if o != nil && !IsNil(o.SystemGroups) {
		return true
	}

	return false
}

// SetSystemGroups gets a reference to the given []SystemGroup and assigns it to the SystemGroups field.
func (o *SystemGroup) SetSystemGroups(v []SystemGroup) {
	o.SystemGroups = v
}

func (o SystemGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.SystemTypes) {
		toSerialize["systemTypes"] = o.SystemTypes
	}
	if !IsNil(o.SystemGroups) {
		toSerialize["systemGroups"] = o.SystemGroups
	}
	return toSerialize, nil
}

type NullableSystemGroup struct {
	value *SystemGroup
	isSet bool
}

func (v NullableSystemGroup) Get() *SystemGroup {
	return v.value
}

func (v *NullableSystemGroup) Set(val *SystemGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemGroup(val *SystemGroup) *NullableSystemGroup {
	return &NullableSystemGroup{value: val, isSet: true}
}

func (v NullableSystemGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


