/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go-macds

import (
	"encoding/json"
)

// checks if the RecallItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecallItem{}

// RecallItem struct for RecallItem
type RecallItem struct {
	// Headline
	Headline *string `json:"headline,omitempty"`
	// Text
	Text *string `json:"text,omitempty"`
	// Classification
	Classification *string `json:"classification,omitempty"`
	// Valid From
	ValidFrom *string `json:"validFrom,omitempty"`
	// Valid To
	ValidTo *string `json:"validTo,omitempty"`
	// Kind of Vehicle Tree Id
	KindOfVehicleTreeId *string `json:"kindOfVehicleTreeId,omitempty"`
}

// NewRecallItem instantiates a new RecallItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecallItem() *RecallItem {
	this := RecallItem{}
	return &this
}

// NewRecallItemWithDefaults instantiates a new RecallItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecallItemWithDefaults() *RecallItem {
	this := RecallItem{}
	return &this
}

// GetHeadline returns the Headline field value if set, zero value otherwise.
func (o *RecallItem) GetHeadline() string {
	if o == nil || IsNil(o.Headline) {
		var ret string
		return ret
	}
	return *o.Headline
}

// GetHeadlineOk returns a tuple with the Headline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecallItem) GetHeadlineOk() (*string, bool) {
	if o == nil || IsNil(o.Headline) {
		return nil, false
	}
	return o.Headline, true
}

// HasHeadline returns a boolean if a field has been set.
func (o *RecallItem) HasHeadline() bool {
	if o != nil && !IsNil(o.Headline) {
		return true
	}

	return false
}

// SetHeadline gets a reference to the given string and assigns it to the Headline field.
func (o *RecallItem) SetHeadline(v string) {
	o.Headline = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *RecallItem) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecallItem) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *RecallItem) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *RecallItem) SetText(v string) {
	o.Text = &v
}

// GetClassification returns the Classification field value if set, zero value otherwise.
func (o *RecallItem) GetClassification() string {
	if o == nil || IsNil(o.Classification) {
		var ret string
		return ret
	}
	return *o.Classification
}

// GetClassificationOk returns a tuple with the Classification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecallItem) GetClassificationOk() (*string, bool) {
	if o == nil || IsNil(o.Classification) {
		return nil, false
	}
	return o.Classification, true
}

// HasClassification returns a boolean if a field has been set.
func (o *RecallItem) HasClassification() bool {
	if o != nil && !IsNil(o.Classification) {
		return true
	}

	return false
}

// SetClassification gets a reference to the given string and assigns it to the Classification field.
func (o *RecallItem) SetClassification(v string) {
	o.Classification = &v
}

// GetValidFrom returns the ValidFrom field value if set, zero value otherwise.
func (o *RecallItem) GetValidFrom() string {
	if o == nil || IsNil(o.ValidFrom) {
		var ret string
		return ret
	}
	return *o.ValidFrom
}

// GetValidFromOk returns a tuple with the ValidFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecallItem) GetValidFromOk() (*string, bool) {
	if o == nil || IsNil(o.ValidFrom) {
		return nil, false
	}
	return o.ValidFrom, true
}

// HasValidFrom returns a boolean if a field has been set.
func (o *RecallItem) HasValidFrom() bool {
	if o != nil && !IsNil(o.ValidFrom) {
		return true
	}

	return false
}

// SetValidFrom gets a reference to the given string and assigns it to the ValidFrom field.
func (o *RecallItem) SetValidFrom(v string) {
	o.ValidFrom = &v
}

// GetValidTo returns the ValidTo field value if set, zero value otherwise.
func (o *RecallItem) GetValidTo() string {
	if o == nil || IsNil(o.ValidTo) {
		var ret string
		return ret
	}
	return *o.ValidTo
}

// GetValidToOk returns a tuple with the ValidTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecallItem) GetValidToOk() (*string, bool) {
	if o == nil || IsNil(o.ValidTo) {
		return nil, false
	}
	return o.ValidTo, true
}

// HasValidTo returns a boolean if a field has been set.
func (o *RecallItem) HasValidTo() bool {
	if o != nil && !IsNil(o.ValidTo) {
		return true
	}

	return false
}

// SetValidTo gets a reference to the given string and assigns it to the ValidTo field.
func (o *RecallItem) SetValidTo(v string) {
	o.ValidTo = &v
}

// GetKindOfVehicleTreeId returns the KindOfVehicleTreeId field value if set, zero value otherwise.
func (o *RecallItem) GetKindOfVehicleTreeId() string {
	if o == nil || IsNil(o.KindOfVehicleTreeId) {
		var ret string
		return ret
	}
	return *o.KindOfVehicleTreeId
}

// GetKindOfVehicleTreeIdOk returns a tuple with the KindOfVehicleTreeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecallItem) GetKindOfVehicleTreeIdOk() (*string, bool) {
	if o == nil || IsNil(o.KindOfVehicleTreeId) {
		return nil, false
	}
	return o.KindOfVehicleTreeId, true
}

// HasKindOfVehicleTreeId returns a boolean if a field has been set.
func (o *RecallItem) HasKindOfVehicleTreeId() bool {
	if o != nil && !IsNil(o.KindOfVehicleTreeId) {
		return true
	}

	return false
}

// SetKindOfVehicleTreeId gets a reference to the given string and assigns it to the KindOfVehicleTreeId field.
func (o *RecallItem) SetKindOfVehicleTreeId(v string) {
	o.KindOfVehicleTreeId = &v
}

func (o RecallItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecallItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Headline) {
		toSerialize["headline"] = o.Headline
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Classification) {
		toSerialize["classification"] = o.Classification
	}
	if !IsNil(o.ValidFrom) {
		toSerialize["validFrom"] = o.ValidFrom
	}
	if !IsNil(o.ValidTo) {
		toSerialize["validTo"] = o.ValidTo
	}
	if !IsNil(o.KindOfVehicleTreeId) {
		toSerialize["kindOfVehicleTreeId"] = o.KindOfVehicleTreeId
	}
	return toSerialize, nil
}

type NullableRecallItem struct {
	value *RecallItem
	isSet bool
}

func (v NullableRecallItem) Get() *RecallItem {
	return v.value
}

func (v *NullableRecallItem) Set(val *RecallItem) {
	v.value = val
	v.isSet = true
}

func (v NullableRecallItem) IsSet() bool {
	return v.isSet
}

func (v *NullableRecallItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecallItem(val *RecallItem) *NullableRecallItem {
	return &NullableRecallItem{value: val, isSet: true}
}

func (v NullableRecallItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecallItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


