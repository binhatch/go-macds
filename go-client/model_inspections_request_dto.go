/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gomacds

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InspectionsRequestDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InspectionsRequestDTO{}

// InspectionsRequestDTO struct for InspectionsRequestDTO
type InspectionsRequestDTO struct {
	// Two characters defining the language code; allowed values: de, en, nl, zh, it, hu, hr, fr, fi, es, el, tr, da, sv, sk, cs, ru, ro, pt, pl
	Language string `json:"language"`
	// HGS Manufacturer Id
	HgsManufId *string `json:"hgsManufId,omitempty"`
	// HGS Model Id
	HgsModelId *string `json:"hgsModelId,omitempty"`
	// Engine Code
	EngineCode *string `json:"engineCode,omitempty"`
	// Engine kW
	EngineKw *string `json:"engineKw,omitempty"`
	// Production Year
	ProductionYear *string `json:"productionYear,omitempty"`
	// Region Code
	RegionCode *string `json:"regionCode,omitempty"`
	// Preview
	Preview *string `json:"preview,omitempty"`
	// Optional; Current mileage of the vehicle to calculate the next due service. (Is tied to \"dateProduction\")
	Mileage *int32 `json:"mileage,omitempty"`
	// Optional; date of the production (or first registration) of the vehicle to calculate the next due service. (Is tied to \"mileage\")
	DateProduction *string `json:"dateProduction,omitempty"`
	// Optional; mileage of when the last service was done; If not provided, the assumption is that no service was done so far.
	MileageLastService *int32 `json:"mileageLastService,omitempty"`
	// Optional; date of when the last service was done; If not provided, the assumption is that no service was done so far.
	DateLastService *string `json:"dateLastService,omitempty"`
	// Service Ids
	ServiceIds []int32 `json:"serviceIds"`
	// KType
	KType string `json:"kType"`
}

type _InspectionsRequestDTO InspectionsRequestDTO

// NewInspectionsRequestDTO instantiates a new InspectionsRequestDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInspectionsRequestDTO(language string, serviceIds []int32, kType string) *InspectionsRequestDTO {
	this := InspectionsRequestDTO{}
	this.Language = language
	this.ServiceIds = serviceIds
	this.KType = kType
	return &this
}

// NewInspectionsRequestDTOWithDefaults instantiates a new InspectionsRequestDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInspectionsRequestDTOWithDefaults() *InspectionsRequestDTO {
	this := InspectionsRequestDTO{}
	return &this
}

// GetLanguage returns the Language field value
func (o *InspectionsRequestDTO) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *InspectionsRequestDTO) SetLanguage(v string) {
	o.Language = v
}

// GetHgsManufId returns the HgsManufId field value if set, zero value otherwise.
func (o *InspectionsRequestDTO) GetHgsManufId() string {
	if o == nil || IsNil(o.HgsManufId) {
		var ret string
		return ret
	}
	return *o.HgsManufId
}

// GetHgsManufIdOk returns a tuple with the HgsManufId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetHgsManufIdOk() (*string, bool) {
	if o == nil || IsNil(o.HgsManufId) {
		return nil, false
	}
	return o.HgsManufId, true
}

// HasHgsManufId returns a boolean if a field has been set.
func (o *InspectionsRequestDTO) HasHgsManufId() bool {
	if o != nil && !IsNil(o.HgsManufId) {
		return true
	}

	return false
}

// SetHgsManufId gets a reference to the given string and assigns it to the HgsManufId field.
func (o *InspectionsRequestDTO) SetHgsManufId(v string) {
	o.HgsManufId = &v
}

// GetHgsModelId returns the HgsModelId field value if set, zero value otherwise.
func (o *InspectionsRequestDTO) GetHgsModelId() string {
	if o == nil || IsNil(o.HgsModelId) {
		var ret string
		return ret
	}
	return *o.HgsModelId
}

// GetHgsModelIdOk returns a tuple with the HgsModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetHgsModelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HgsModelId) {
		return nil, false
	}
	return o.HgsModelId, true
}

// HasHgsModelId returns a boolean if a field has been set.
func (o *InspectionsRequestDTO) HasHgsModelId() bool {
	if o != nil && !IsNil(o.HgsModelId) {
		return true
	}

	return false
}

// SetHgsModelId gets a reference to the given string and assigns it to the HgsModelId field.
func (o *InspectionsRequestDTO) SetHgsModelId(v string) {
	o.HgsModelId = &v
}

// GetEngineCode returns the EngineCode field value if set, zero value otherwise.
func (o *InspectionsRequestDTO) GetEngineCode() string {
	if o == nil || IsNil(o.EngineCode) {
		var ret string
		return ret
	}
	return *o.EngineCode
}

// GetEngineCodeOk returns a tuple with the EngineCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetEngineCodeOk() (*string, bool) {
	if o == nil || IsNil(o.EngineCode) {
		return nil, false
	}
	return o.EngineCode, true
}

// HasEngineCode returns a boolean if a field has been set.
func (o *InspectionsRequestDTO) HasEngineCode() bool {
	if o != nil && !IsNil(o.EngineCode) {
		return true
	}

	return false
}

// SetEngineCode gets a reference to the given string and assigns it to the EngineCode field.
func (o *InspectionsRequestDTO) SetEngineCode(v string) {
	o.EngineCode = &v
}

// GetEngineKw returns the EngineKw field value if set, zero value otherwise.
func (o *InspectionsRequestDTO) GetEngineKw() string {
	if o == nil || IsNil(o.EngineKw) {
		var ret string
		return ret
	}
	return *o.EngineKw
}

// GetEngineKwOk returns a tuple with the EngineKw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetEngineKwOk() (*string, bool) {
	if o == nil || IsNil(o.EngineKw) {
		return nil, false
	}
	return o.EngineKw, true
}

// HasEngineKw returns a boolean if a field has been set.
func (o *InspectionsRequestDTO) HasEngineKw() bool {
	if o != nil && !IsNil(o.EngineKw) {
		return true
	}

	return false
}

// SetEngineKw gets a reference to the given string and assigns it to the EngineKw field.
func (o *InspectionsRequestDTO) SetEngineKw(v string) {
	o.EngineKw = &v
}

// GetProductionYear returns the ProductionYear field value if set, zero value otherwise.
func (o *InspectionsRequestDTO) GetProductionYear() string {
	if o == nil || IsNil(o.ProductionYear) {
		var ret string
		return ret
	}
	return *o.ProductionYear
}

// GetProductionYearOk returns a tuple with the ProductionYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetProductionYearOk() (*string, bool) {
	if o == nil || IsNil(o.ProductionYear) {
		return nil, false
	}
	return o.ProductionYear, true
}

// HasProductionYear returns a boolean if a field has been set.
func (o *InspectionsRequestDTO) HasProductionYear() bool {
	if o != nil && !IsNil(o.ProductionYear) {
		return true
	}

	return false
}

// SetProductionYear gets a reference to the given string and assigns it to the ProductionYear field.
func (o *InspectionsRequestDTO) SetProductionYear(v string) {
	o.ProductionYear = &v
}

// GetRegionCode returns the RegionCode field value if set, zero value otherwise.
func (o *InspectionsRequestDTO) GetRegionCode() string {
	if o == nil || IsNil(o.RegionCode) {
		var ret string
		return ret
	}
	return *o.RegionCode
}

// GetRegionCodeOk returns a tuple with the RegionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetRegionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RegionCode) {
		return nil, false
	}
	return o.RegionCode, true
}

// HasRegionCode returns a boolean if a field has been set.
func (o *InspectionsRequestDTO) HasRegionCode() bool {
	if o != nil && !IsNil(o.RegionCode) {
		return true
	}

	return false
}

// SetRegionCode gets a reference to the given string and assigns it to the RegionCode field.
func (o *InspectionsRequestDTO) SetRegionCode(v string) {
	o.RegionCode = &v
}

// GetPreview returns the Preview field value if set, zero value otherwise.
func (o *InspectionsRequestDTO) GetPreview() string {
	if o == nil || IsNil(o.Preview) {
		var ret string
		return ret
	}
	return *o.Preview
}

// GetPreviewOk returns a tuple with the Preview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetPreviewOk() (*string, bool) {
	if o == nil || IsNil(o.Preview) {
		return nil, false
	}
	return o.Preview, true
}

// HasPreview returns a boolean if a field has been set.
func (o *InspectionsRequestDTO) HasPreview() bool {
	if o != nil && !IsNil(o.Preview) {
		return true
	}

	return false
}

// SetPreview gets a reference to the given string and assigns it to the Preview field.
func (o *InspectionsRequestDTO) SetPreview(v string) {
	o.Preview = &v
}

// GetMileage returns the Mileage field value if set, zero value otherwise.
func (o *InspectionsRequestDTO) GetMileage() int32 {
	if o == nil || IsNil(o.Mileage) {
		var ret int32
		return ret
	}
	return *o.Mileage
}

// GetMileageOk returns a tuple with the Mileage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetMileageOk() (*int32, bool) {
	if o == nil || IsNil(o.Mileage) {
		return nil, false
	}
	return o.Mileage, true
}

// HasMileage returns a boolean if a field has been set.
func (o *InspectionsRequestDTO) HasMileage() bool {
	if o != nil && !IsNil(o.Mileage) {
		return true
	}

	return false
}

// SetMileage gets a reference to the given int32 and assigns it to the Mileage field.
func (o *InspectionsRequestDTO) SetMileage(v int32) {
	o.Mileage = &v
}

// GetDateProduction returns the DateProduction field value if set, zero value otherwise.
func (o *InspectionsRequestDTO) GetDateProduction() string {
	if o == nil || IsNil(o.DateProduction) {
		var ret string
		return ret
	}
	return *o.DateProduction
}

// GetDateProductionOk returns a tuple with the DateProduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetDateProductionOk() (*string, bool) {
	if o == nil || IsNil(o.DateProduction) {
		return nil, false
	}
	return o.DateProduction, true
}

// HasDateProduction returns a boolean if a field has been set.
func (o *InspectionsRequestDTO) HasDateProduction() bool {
	if o != nil && !IsNil(o.DateProduction) {
		return true
	}

	return false
}

// SetDateProduction gets a reference to the given string and assigns it to the DateProduction field.
func (o *InspectionsRequestDTO) SetDateProduction(v string) {
	o.DateProduction = &v
}

// GetMileageLastService returns the MileageLastService field value if set, zero value otherwise.
func (o *InspectionsRequestDTO) GetMileageLastService() int32 {
	if o == nil || IsNil(o.MileageLastService) {
		var ret int32
		return ret
	}
	return *o.MileageLastService
}

// GetMileageLastServiceOk returns a tuple with the MileageLastService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetMileageLastServiceOk() (*int32, bool) {
	if o == nil || IsNil(o.MileageLastService) {
		return nil, false
	}
	return o.MileageLastService, true
}

// HasMileageLastService returns a boolean if a field has been set.
func (o *InspectionsRequestDTO) HasMileageLastService() bool {
	if o != nil && !IsNil(o.MileageLastService) {
		return true
	}

	return false
}

// SetMileageLastService gets a reference to the given int32 and assigns it to the MileageLastService field.
func (o *InspectionsRequestDTO) SetMileageLastService(v int32) {
	o.MileageLastService = &v
}

// GetDateLastService returns the DateLastService field value if set, zero value otherwise.
func (o *InspectionsRequestDTO) GetDateLastService() string {
	if o == nil || IsNil(o.DateLastService) {
		var ret string
		return ret
	}
	return *o.DateLastService
}

// GetDateLastServiceOk returns a tuple with the DateLastService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetDateLastServiceOk() (*string, bool) {
	if o == nil || IsNil(o.DateLastService) {
		return nil, false
	}
	return o.DateLastService, true
}

// HasDateLastService returns a boolean if a field has been set.
func (o *InspectionsRequestDTO) HasDateLastService() bool {
	if o != nil && !IsNil(o.DateLastService) {
		return true
	}

	return false
}

// SetDateLastService gets a reference to the given string and assigns it to the DateLastService field.
func (o *InspectionsRequestDTO) SetDateLastService(v string) {
	o.DateLastService = &v
}

// GetServiceIds returns the ServiceIds field value
func (o *InspectionsRequestDTO) GetServiceIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.ServiceIds
}

// GetServiceIdsOk returns a tuple with the ServiceIds field value
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetServiceIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceIds, true
}

// SetServiceIds sets field value
func (o *InspectionsRequestDTO) SetServiceIds(v []int32) {
	o.ServiceIds = v
}

// GetKType returns the KType field value
func (o *InspectionsRequestDTO) GetKType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KType
}

// GetKTypeOk returns a tuple with the KType field value
// and a boolean to check if the value has been set.
func (o *InspectionsRequestDTO) GetKTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KType, true
}

// SetKType sets field value
func (o *InspectionsRequestDTO) SetKType(v string) {
	o.KType = v
}

func (o InspectionsRequestDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InspectionsRequestDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["language"] = o.Language
	if !IsNil(o.HgsManufId) {
		toSerialize["hgsManufId"] = o.HgsManufId
	}
	if !IsNil(o.HgsModelId) {
		toSerialize["hgsModelId"] = o.HgsModelId
	}
	if !IsNil(o.EngineCode) {
		toSerialize["engineCode"] = o.EngineCode
	}
	if !IsNil(o.EngineKw) {
		toSerialize["engineKw"] = o.EngineKw
	}
	if !IsNil(o.ProductionYear) {
		toSerialize["productionYear"] = o.ProductionYear
	}
	if !IsNil(o.RegionCode) {
		toSerialize["regionCode"] = o.RegionCode
	}
	if !IsNil(o.Preview) {
		toSerialize["preview"] = o.Preview
	}
	if !IsNil(o.Mileage) {
		toSerialize["mileage"] = o.Mileage
	}
	if !IsNil(o.DateProduction) {
		toSerialize["dateProduction"] = o.DateProduction
	}
	if !IsNil(o.MileageLastService) {
		toSerialize["mileageLastService"] = o.MileageLastService
	}
	if !IsNil(o.DateLastService) {
		toSerialize["dateLastService"] = o.DateLastService
	}
	toSerialize["serviceIds"] = o.ServiceIds
	toSerialize["kType"] = o.KType
	return toSerialize, nil
}

func (o *InspectionsRequestDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"language",
		"serviceIds",
		"kType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInspectionsRequestDTO := _InspectionsRequestDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInspectionsRequestDTO)

	if err != nil {
		return err
	}

	*o = InspectionsRequestDTO(varInspectionsRequestDTO)

	return err
}

type NullableInspectionsRequestDTO struct {
	value *InspectionsRequestDTO
	isSet bool
}

func (v NullableInspectionsRequestDTO) Get() *InspectionsRequestDTO {
	return v.value
}

func (v *NullableInspectionsRequestDTO) Set(val *InspectionsRequestDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableInspectionsRequestDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableInspectionsRequestDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInspectionsRequestDTO(val *InspectionsRequestDTO) *NullableInspectionsRequestDTO {
	return &NullableInspectionsRequestDTO{value: val, isSet: true}
}

func (v NullableInspectionsRequestDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInspectionsRequestDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


