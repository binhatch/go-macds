/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package go-macds

import (
	"encoding/json"
)

// checks if the ServiceType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceType{}

// ServiceType struct for ServiceType
type ServiceType struct {
	// Id
	Id *int32 `json:"id,omitempty"`
	Name *ReplacementNameReference `json:"name,omitempty"`
	// Order
	Order *int32 `json:"order,omitempty"`
	// Type
	Type *string `json:"type,omitempty"`
	ImportantGuide *ObjectReferenceContainer `json:"importantGuide,omitempty"`
	// List of Vehicle References
	VehicleReference []VehicleReference `json:"vehicleReference,omitempty"`
	// List of services
	Services []Service `json:"services,omitempty"`
	// List of Extra Services
	ExtraServices []Service `json:"extraServices,omitempty"`
}

// NewServiceType instantiates a new ServiceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceType() *ServiceType {
	this := ServiceType{}
	return &this
}

// NewServiceTypeWithDefaults instantiates a new ServiceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceTypeWithDefaults() *ServiceType {
	this := ServiceType{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceType) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceType) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceType) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ServiceType) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceType) GetName() ReplacementNameReference {
	if o == nil || IsNil(o.Name) {
		var ret ReplacementNameReference
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceType) GetNameOk() (*ReplacementNameReference, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceType) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given ReplacementNameReference and assigns it to the Name field.
func (o *ServiceType) SetName(v ReplacementNameReference) {
	o.Name = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *ServiceType) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceType) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *ServiceType) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *ServiceType) SetOrder(v int32) {
	o.Order = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ServiceType) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceType) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ServiceType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ServiceType) SetType(v string) {
	o.Type = &v
}

// GetImportantGuide returns the ImportantGuide field value if set, zero value otherwise.
func (o *ServiceType) GetImportantGuide() ObjectReferenceContainer {
	if o == nil || IsNil(o.ImportantGuide) {
		var ret ObjectReferenceContainer
		return ret
	}
	return *o.ImportantGuide
}

// GetImportantGuideOk returns a tuple with the ImportantGuide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceType) GetImportantGuideOk() (*ObjectReferenceContainer, bool) {
	if o == nil || IsNil(o.ImportantGuide) {
		return nil, false
	}
	return o.ImportantGuide, true
}

// HasImportantGuide returns a boolean if a field has been set.
func (o *ServiceType) HasImportantGuide() bool {
	if o != nil && !IsNil(o.ImportantGuide) {
		return true
	}

	return false
}

// SetImportantGuide gets a reference to the given ObjectReferenceContainer and assigns it to the ImportantGuide field.
func (o *ServiceType) SetImportantGuide(v ObjectReferenceContainer) {
	o.ImportantGuide = &v
}

// GetVehicleReference returns the VehicleReference field value if set, zero value otherwise.
func (o *ServiceType) GetVehicleReference() []VehicleReference {
	if o == nil || IsNil(o.VehicleReference) {
		var ret []VehicleReference
		return ret
	}
	return o.VehicleReference
}

// GetVehicleReferenceOk returns a tuple with the VehicleReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceType) GetVehicleReferenceOk() ([]VehicleReference, bool) {
	if o == nil || IsNil(o.VehicleReference) {
		return nil, false
	}
	return o.VehicleReference, true
}

// HasVehicleReference returns a boolean if a field has been set.
func (o *ServiceType) HasVehicleReference() bool {
	if o != nil && !IsNil(o.VehicleReference) {
		return true
	}

	return false
}

// SetVehicleReference gets a reference to the given []VehicleReference and assigns it to the VehicleReference field.
func (o *ServiceType) SetVehicleReference(v []VehicleReference) {
	o.VehicleReference = v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *ServiceType) GetServices() []Service {
	if o == nil || IsNil(o.Services) {
		var ret []Service
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceType) GetServicesOk() ([]Service, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *ServiceType) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given []Service and assigns it to the Services field.
func (o *ServiceType) SetServices(v []Service) {
	o.Services = v
}

// GetExtraServices returns the ExtraServices field value if set, zero value otherwise.
func (o *ServiceType) GetExtraServices() []Service {
	if o == nil || IsNil(o.ExtraServices) {
		var ret []Service
		return ret
	}
	return o.ExtraServices
}

// GetExtraServicesOk returns a tuple with the ExtraServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceType) GetExtraServicesOk() ([]Service, bool) {
	if o == nil || IsNil(o.ExtraServices) {
		return nil, false
	}
	return o.ExtraServices, true
}

// HasExtraServices returns a boolean if a field has been set.
func (o *ServiceType) HasExtraServices() bool {
	if o != nil && !IsNil(o.ExtraServices) {
		return true
	}

	return false
}

// SetExtraServices gets a reference to the given []Service and assigns it to the ExtraServices field.
func (o *ServiceType) SetExtraServices(v []Service) {
	o.ExtraServices = v
}

func (o ServiceType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ImportantGuide) {
		toSerialize["importantGuide"] = o.ImportantGuide
	}
	if !IsNil(o.VehicleReference) {
		toSerialize["vehicleReference"] = o.VehicleReference
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	if !IsNil(o.ExtraServices) {
		toSerialize["extraServices"] = o.ExtraServices
	}
	return toSerialize, nil
}

type NullableServiceType struct {
	value *ServiceType
	isSet bool
}

func (v NullableServiceType) Get() *ServiceType {
	return v.value
}

func (v *NullableServiceType) Set(val *ServiceType) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceType) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceType(val *ServiceType) *NullableServiceType {
	return &NullableServiceType{value: val, isSet: true}
}

func (v NullableServiceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


