/*
Hella Gutmann - macsDS (Data Services) - API collection

This document contains all relevant APIs for diagnostics (incl. DTCs), repair & maintenance information (RMI) and vehicle identification.

API version: V20240702-130718
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github.com/binhatch/go-macds

import (
	"encoding/json"
)

// checks if the Hgs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Hgs{}

// Hgs struct for Hgs
type Hgs struct {
	Manufacturer *Manufacturer `json:"manufacturer,omitempty"`
	Drivetrain *Drivetrain `json:"drivetrain,omitempty"`
	Model *Model `json:"model,omitempty"`
}

// NewHgs instantiates a new Hgs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHgs() *Hgs {
	this := Hgs{}
	return &this
}

// NewHgsWithDefaults instantiates a new Hgs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHgsWithDefaults() *Hgs {
	this := Hgs{}
	return &this
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *Hgs) GetManufacturer() Manufacturer {
	if o == nil || IsNil(o.Manufacturer) {
		var ret Manufacturer
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hgs) GetManufacturerOk() (*Manufacturer, bool) {
	if o == nil || IsNil(o.Manufacturer) {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *Hgs) HasManufacturer() bool {
	if o != nil && !IsNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given Manufacturer and assigns it to the Manufacturer field.
func (o *Hgs) SetManufacturer(v Manufacturer) {
	o.Manufacturer = &v
}

// GetDrivetrain returns the Drivetrain field value if set, zero value otherwise.
func (o *Hgs) GetDrivetrain() Drivetrain {
	if o == nil || IsNil(o.Drivetrain) {
		var ret Drivetrain
		return ret
	}
	return *o.Drivetrain
}

// GetDrivetrainOk returns a tuple with the Drivetrain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hgs) GetDrivetrainOk() (*Drivetrain, bool) {
	if o == nil || IsNil(o.Drivetrain) {
		return nil, false
	}
	return o.Drivetrain, true
}

// HasDrivetrain returns a boolean if a field has been set.
func (o *Hgs) HasDrivetrain() bool {
	if o != nil && !IsNil(o.Drivetrain) {
		return true
	}

	return false
}

// SetDrivetrain gets a reference to the given Drivetrain and assigns it to the Drivetrain field.
func (o *Hgs) SetDrivetrain(v Drivetrain) {
	o.Drivetrain = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *Hgs) GetModel() Model {
	if o == nil || IsNil(o.Model) {
		var ret Model
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Hgs) GetModelOk() (*Model, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *Hgs) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given Model and assigns it to the Model field.
func (o *Hgs) SetModel(v Model) {
	o.Model = &v
}

func (o Hgs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Hgs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Manufacturer) {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if !IsNil(o.Drivetrain) {
		toSerialize["drivetrain"] = o.Drivetrain
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	return toSerialize, nil
}

type NullableHgs struct {
	value *Hgs
	isSet bool
}

func (v NullableHgs) Get() *Hgs {
	return v.value
}

func (v *NullableHgs) Set(val *Hgs) {
	v.value = val
	v.isSet = true
}

func (v NullableHgs) IsSet() bool {
	return v.isSet
}

func (v *NullableHgs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHgs(val *Hgs) *NullableHgs {
	return &NullableHgs{value: val, isSet: true}
}

func (v NullableHgs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHgs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


